trigger:
  branches:
    include:
      - main

stages:
- stage: Generate_Simulink_Web_View

  jobs:
  - job: Generate_Simulink_Web_View
    displayName: 'Generate_Simulink_Web_View'
    pool: Default
   
    steps:
        - checkout: self
          displayName: 'Checkout Repository'
          
         
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
              mw -using bslcicd matlab -nodesktop -logfile output.log -batch "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateSimulinkWebView|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'padv.builtin.task.GenerateSimulinkWebView|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx', 'padv.builtin.task.GenerateSimulinkWebView|sl_model_file|ProcessAdvisorExample|02_Models/Flight_Control/specification/Flight_Control.slx', 'padv.builtin.task.GenerateSimulinkWebView|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx', 'padv.builtin.task.GenerateSimulinkWebView|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = true, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);"


- stage: Check_Modeling_Standards 
  dependsOn: Generate_Simulink_Web_View
   
  
  jobs:
  - job: Check_Modeling_Standards
    displayName: 'Check_Modeling_Standards'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
          
           
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
             mw -using bslcicd matlab -nodesktop -logfile output.log -batch "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.RunModelStandards|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'padv.builtin.task.RunModelStandards|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx', 'padv.builtin.task.RunModelStandards|sl_model_file|ProcessAdvisorExample|02_Models/Flight_Control/specification/Flight_Control.slx', 'padv.builtin.task.RunModelStandards|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx', 'padv.builtin.task.RunModelStandards|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = true, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);"

         
- stage: Detect_Design_Errors
  dependsOn: Check_Modeling_Standards 
  jobs:
  - job: Detect_Design_Errors  
    displayName: 'Detect_Design_Errors'
    pool: Default
   
    steps:
    - checkout: self 
      displayName: 'Checkout Repository'     
    
    - task: CmdLine@2
      displayName: 'Launch MATLAB'
      inputs:
       script: |
        mw -using bslcicd matlab -nodesktop -logfile output.log -batch "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.DetectDesignErrors|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'padv.builtin.task.DetectDesignErrors|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx', 'padv.builtin.task.DetectDesignErrors|sl_model_file|ProcessAdvisorExample|02_Models/Flight_Control/specification/Flight_Control.slx', 'padv.builtin.task.DetectDesignErrors|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx', 'padv.builtin.task.DetectDesignErrors|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = true, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);"

        
- stage: Generate_SDD_Report
  dependsOn: Detect_Design_Errors 
  
  jobs:
  - job: Generate_SDD_Report
    displayName: 'Generate_SDD_Report'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
          
        
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
             mw -using bslcicd matlab -nodesktop -logfile output.log -batch "openProject(pwd);[~,exitCode] = runprocess(Tasks = {'padv.builtin.task.GenerateSDDReport|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'padv.builtin.task.GenerateSDDReport|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx', 'padv.builtin.task.GenerateSDDReport|sl_model_file|ProcessAdvisorExample|02_Models/Flight_Control/specification/Flight_Control.slx', 'padv.builtin.task.GenerateSDDReport|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx', 'padv.builtin.task.GenerateSDDReport|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = false, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);exit(exitCode);" 
        



- stage: Run_Tests
  dependsOn:  Generate_SDD_Report

  jobs:
  - job:  Run_Tests
    displayName: '  Run_Tests'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
          
            
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
             mw -using bslcicd matlab -nodesktop -logfile output.log -batch "openProject(pwd);[~,exitCode] = runprocess(Tasks = {'padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/AHRS_Voter/test_cases/AHRS_Voter_REQ_Based_Test.mldatx|74194125-b632-41a1-b96d-b3364441277f', 'padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/AHRS_Voter/test_cases/AHRS_Voter_REQ_Based_Test.mldatx|ced877ff-cfb8-4fa8-9bbf-aaa29b1d926b', 'padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/AHRS_Voter/test_cases/AHRS_Voter_REQ_Based_Test.mldatx|d3a72cc8-687b-44ae-a909-7eff803b455b', 'padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/OuterLoop_Control/test_cases/OuterLoop_Control_REQ_Based_Test.mldatx|51b0cb29-34f5-4c04-9104-4f3b0b48dda9', 'padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/OuterLoop_Control/test_cases/OuterLoop_Control_REQ_Based_Test.mldatx|70d344b2-d65f-4872-9e4b-cef338e618a5', 'padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/OuterLoop_Control/test_cases/OuterLoop_Control_REQ_Based_Test.mldatx|862932e4-be44-4f66-9abe-fb313da73c0d'}, Force = false, ExitInBatchMode = false, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);exit(exitCode);" 

            
- stage: Generate_Code
  dependsOn:   Run_Tests
  
  jobs:
  - job: Generate_Code
    displayName: 'Generate_Code'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
                     
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
             mw -using bslcicd matlab -nodesktop -logfile output.log -batch "openProject(pwd);[~,exitCode] = runprocess(Tasks = {'padv.builtin.task.GenerateCode|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'padv.builtin.task.GenerateCode|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx', 'padv.builtin.task.GenerateCode|sl_model_file|ProcessAdvisorExample|02_Models/Flight_Control/specification/Flight_Control.slx', 'padv.builtin.task.GenerateCode|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx', 'padv.builtin.task.GenerateCode|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = false, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);exit(exitCode);" 
        
 
- stage:  Check_Coding_Standards
  dependsOn: Generate_Code
  
  jobs:
  - job:  Check_Coding_Standards
    displayName: ' Check_Coding_Standards'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
            
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
             mw -using bslcicd matlab -nodesktop -logfile output.log  -batch "openProject(pwd);[~,exitCode] = runprocess(Tasks = {'padv.builtin.task.AnalyzeModelCode|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'padv.builtin.task.AnalyzeModelCode|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx', 'padv.builtin.task.AnalyzeModelCode|sl_model_file|ProcessAdvisorExample|02_Models/Flight_Control/specification/Flight_Control.slx', 'padv.builtin.task.AnalyzeModelCode|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx', 'padv.builtin.task.AnalyzeModelCode|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = false, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);exit(exitCode);"  
    
  
- stage: Prove_Code_Quality
  dependsOn: Check_Coding_Standards
  
  jobs:
  - job:   Prove_Code_Quality
    displayName: '  Prove_Code_Quality'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
            
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
             mw -using bslcicd matlab -nodesktop -logfile output.log  -batch "openProject(pwd);[~,exitCode] = runprocess(Tasks = {'ProveCodeQuality|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'ProveCodeQuality|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx', 'ProveCodeQuality|sl_model_file|ProcessAdvisorExample|02_Models/Flight_Control/specification/Flight_Control.slx', 'ProveCodeQuality|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx', 'ProveCodeQuality|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = false, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);exit(exitCode);" 
       

- stage: Inspect_Code
  dependsOn: Prove_Code_Quality
  
  jobs:
  - job:  Inspect_Code
    displayName: ' Inspect_Code'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
          
            
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
             mw -using bslcicd matlab -nodesktop -logfile output.log  -batch "openProject(pwd);[~,exitCode] = runprocess(Tasks = {'padv.builtin.task.RunCodeInspection|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'padv.builtin.task.RunCodeInspection|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx', 'padv.builtin.task.RunCodeInspection|sl_model_file|ProcessAdvisorExample|02_Models/Flight_Control/specification/Flight_Control.slx', 'padv.builtin.task.RunCodeInspection|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx', 'padv.builtin.task.RunCodeInspection|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = false, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);exit(exitCode);" 



- stage: Merge_Test_Results
  dependsOn: Inspect_Code
  
  jobs:
  - job: Merge_Test_Results
    displayName: 'Merge_Test_Results'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
            
        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
             mw -using bslcicd matlab -nodesktop -logfile output.log   -batch "openProject(pwd);[~,exitCode] = runprocess(Tasks = {'padv.builtin.task.MergeTestResults|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx', 'padv.builtin.task.MergeTestResults|sl_model_file|ProcessAdvisorExample|02_Models/OuterLoop_Control/specification/OuterLoop_Control.slx'}, Force = false, ExitInBatchMode = false, RerunFailedTasks = false, RerunErroredTasks = false, GenerateJUnitForProcess = true);exit(exitCode);" 
        

- stage: Generate_PADV_Report
  dependsOn: Merge_Test_Results
  
  jobs:
  - job: Generate_PADV_Report
    displayName: 'Generate_PADV_Report'
    pool: Default
   
    steps:
        - checkout: self 
          displayName: 'Checkout Repository'
          

        - task: CmdLine@2
          displayName: 'Launch MATLAB'
          inputs:
            script: |
              mw -using bslcicd matlab -nodesktop -logfile output.log -batch "openProject(pwd); 
              rptObj=padv.ProcessAdvisorReportGenerator(Format='pdf', OutputPath=fullfile(currentProject().RootFolder,'ProcessAdvisorReport'));
              rptObj.generateReport();" 
        
